"""
Lesson 5
07.12.2024

Срезы и циклы в Python

- Условные операторы (вложенные и тернарный)

- Срезы строк +
    - Базовый синтаксис [start:end:step]
    - Отрицательные индексы
    - Пропуск параметров среза
    - Обратный порядок
    - Копирование строк

- Циклы в Python
    - Цикл while -
    - Цикл for +
    - Операторы break и continue -
    - Вложенные циклы -
    
- Итерация строк +
    - Перебор символов
    - Подсчет символов
    - Поиск подстрок
    
- Знакомство со списками
    - Создание списков +
    - Основные методы списков -
    - Срезы списков -
    
- Практические примеры
    - Проверка палиндрома +
    - Подсчет гласных и согласных +
    - Генерация последовательностей -
    - Работа с текстовыми данными -

#TODO - Проект "Текстовый анализатор" (подсчет статистики текста)
#TODO - Проект "Генератор паролей" (с использованием циклов и срезов) !!!
#TODO - Проект "Шифровальщик текста" (Индексы в лексикографическом порядке)
"""

# Тернарный оператор
# <утверждение> if <условие> else <альтернатива>

# AGE = 18

# IS_ADULT = 'Вы совершеннолетний' if AGE >= 18 else 'Вы несовершеннолетний'

# print(IS_ADULT) if AGE >= 18 else print('Вы несовершеннолетний')

# if AGE >= 18:
#     print('Вы совершеннолетний')
# else:
#     print('Вы несовершеннолетний')


# Вложенные условия (if - else)

# Проверка на сложность пароля.
# больше 8 символов и больше 2 букв r любой регистр

user_password = "sa df"

if len(user_password) >= 8:
    if user_password.lower().count("r") >= 2:
        # print('Пароль сложный')
        if not " " in user_password:
            print("В пароле нет пробелов и он хороший")
        else:
            print("В пароле есть пробелы")
    else:
        print("В пароле должно быть больше букв r")
else:
    print("Пароль короткий")

report_string = ''

if not len(user_password) >= 8:
    report_string += "Пароль короткий\n"

if not user_password.lower().count("r") >= 2:
    report_string += "Пароль должен содержать больше букв r\n"

if " " in user_password:
    report_string += "В пароле есть пробелы\n"

# Время печатать отчет
# print('Ваш пароль хороший') if not report_string else print(report_string)

#####################
# Срезы строк
string = "Ехал Фёдор через реку видит Фёдор в реке рак, рак..."
# Строка - неизменяемая, упорядоченная последовательность символов
# Индекс - позиция символа в строке
# Индексы в Python начинаются с 0

# print(string[0])
# print(string[1])

# last_index = len(string) - 1
# print(string[last_index])

# print(string[-1])
# print(string[-2])

# # Как получить первые 3 буквы?
# print(string[0] + string[1] + string[2])

# # Срезы [start:stop:step]
# print(string[::])
# print(string[0:6:1])
# print(string[0:6])
# print(string[:6])

# # Поработаем с шагом
# print(string[::2]) # Еа ёо ее еувдтФдрврк а,рк.
# print(string[::-1]) # ...кар ,кар екер в родёФ тидив укер зереч родёФ лахЕ

# Палиндром - слово, которое читается одинаково слева направо и справа налево одинковым образом

"""
дед, топот, довод, казак, шалаш, аргентина манит нерга, а роза упала на лапу азора, 
"""

palindromes = [
    "А роза упала на лапу Азора",
    "Аргентина манит негра",
    "Я иду с мечем судия",
    "Леша на полке клопа нашел",
    "Искать такси",
    "Аргентина манит негра, а тот ловит негра, а негр там манит аргентинца",
    "Нажал кабан на баклажан",
    "Город дорог",
    "Тот кот",
    "А баба",
    "Шаг шагнул на шар, а шар на шаг шагнул",
    "Мадам, я - Адам!",
    "Ешь немажь жаменше!",
    "Мы, сомы, летели в осьмым",
    "На в лоб, болван!",
    "Тащи в ущелье лещу вищат",
    "Я не реву - уверен я",
    "Утоп в поту",
]


#PRACTICE Проверка на палиндром
"""
1. Пользователь вводит строку
2. Вы через срез string[::-1] сверяем является ли строка палиндромом
с учетом регистра, и убрав пробелы .lower().replace(" ", "")
3. Вернуть ответ пользователю
"""
# # Ввод данных
# user_input = input('Введите строку: ')

# # Проверка на палиндром
# row_string = user_input.lower().replace(" ", "")

# if row_string == row_string[::-1]:
#     print(f'{user_input} - палиндром')
# else:
#     print(f'{user_input} - не палиндром')

# # на тернарном операторе
# result = f'{user_input} - палиндром' if row_string == row_string[::-1] else f'{user_input} - не палиндром'
# print(result)
# input("Нажмите Enter для выхода")


string = "Ехал Фёдор через реку видит Фёдор в реке рак, рак..."

# Строка с гласными
vowels = "аеёиоуыэюя"
# Строка с согласными
consonants = "бвгджзйклмнпрстфхцчшщ"

vowels_count = 0
consonants_count = 0
words_count = 1

new_ = ""
for letter in string:
    if letter in vowels:
        vowels_count += 1
    elif letter in consonants:
        consonants_count += 1
    elif letter == " ":
        words_count += 1

print(f'В строке "{string}" гласных букв {vowels_count}, согласных {consonants_count}, слов {words_count}')

#PRACTICE Подсчет гласных и согласных. Вывести результат

# Неизменяемость строк
# string[0] = "О" # TypeError: 'str' object does not support item assignment

print(id(string))
print(id(string.replace("Ф", "О")))

# Списки. Упорядоченная изменяемая коллекция
# Списки имеют индексы. Индексы начинаются с 0
# Поддерживают срезы. Элементы списка могут быть любых типов данных.

# Пустой список
my_list = []

my_list = list()

# Не пустой список
my_list = [1, "Фёдор", 3.14, True, None, [1, 2, 3]]

for item in my_list:
    print(item)

# .split() - разделит строку на список по пробелу, или по любому другому символу
# "++".join(list) - объединяет список в строку с указанным разделителем

fedor_list = string.split()
# ['Ехал', 'Фёдор', 'через', 'реку', 'видит', 'Фёдор', 'в', 'реке', 'рак,', 'рак...']
words_count = len(fedor_list) 
print(fedor_list)

fedor_string = "++" .join(fedor_list)
# Ехал++Фёдор++через++реку++видит++Фёдор++в++реке++рак,++рак...
print(fedor_string)

#PRACTICE Что посмотрим сегодня. Split Choise
"""
1. Получите от пользователя строку через запятую с фильмами
2. Разбейте её на список, с указанием альтеративного разделителя split(",")
3. Выведите на экран список фильмов
4. Получите рандомный элемент списка через random.choice()
import random
random.choice(my_list)
5. Выведите на экран выбранный фильм
"""
import random

# 1
# user_input = input("Введите фильмы через запятую: ")
user_input = ' Человек-хрюк , Братва и кольцо , Гарри Поттер и узник банкомата'
#2
movies_list = user_input.split(",")

new_film_list = []
for film in movies_list:
    film = film.strip()
    new_film_list.append(film)

# List Comprehension
# Списковое выражение
new_film_list = [film.strip() for film in movies_list]
#3
print(new_film_list)

#4
random_movie = random.choice(new_film_list)

#5
print(random_movie)

# ORD и CHR
# ord() - возвращает числовое значение символа
# chr() - возвращает символ по числовому значению

string = "хеллоу"

for letter in string:
    print(ord(letter))

